#!/bin/sh
#
# full

ARGS="$@"

usage() {
    base=$(basename $0)

    cat >&2 << EOF
Usage:
    $ $base <wid> <screen>
    $ $base [-c|--clean] <wid>
    $ $base [-r|--reset]
    $ $base [-h|--help]
EOF

    test $# -eq 0 || exit $1
}

clean() {
    cleanWid=$1
    widCheck "$cleanWid" || usage 1

    # search all fsfiles for matching wid
    grep -qrw "$cleanWid" "$fsdir" && {
        screenIdFile=$(grep -rH "$cleanWid" "$fsdir" | cut -d: -f 1)

        test ! -z "$wid" && {
            wtp $(grep -w "$wid" "$screenIdFile")
            chwb -s $BW -c "$ACTIVE" "$wid"
        }

        rm "$screenIdFile"
    }

    exit 0
}

reset() {
    rm $fsdir/* 2> /dev/null
    exit 0
}

main() {
    . fwmrc

    case "$1" in
        -h|--help|help)
            usage 0
            ;;
        -c|--clean|clean)
            clean "$2"
            ;;
        -r|--reset|reset)
            reset
            ;;
        *)
            case $# in
                0)
                    widCheck "$PFW" && wid="$PFW" || usage 1
                    ;;
                1)
                    widCheck "$1" && wid="$1" || usage 1
                    ;;
                2)
                    widCheck "$1" && wid="$1" || usage 1
                    mattr "$2" && SCR="$2" || {
                        printf '%s\n' "$2 is not a connected screen."
                        exit 1
                    }
                    ;;
            esac
            ;;
    esac

    # clean wid if already focused
    grep -qrw "$wid" "$fsdir" && {
        clean "$wid"
        return
    }

    # focus fullwid if it exists
    test -e "$fsdir/$SCR" && {
        focus wid $(cat "$fsdir/$SCR" | cut -d\  -f 5)
        return
    }

    # save window info to disk
    wattr xywhi "$wid" > "$fsdir/$SCR"

    # perform fullscreen operations
    chwb -s 0 "$wid"
    chwso -r "$wid"
    sh -c "wtp $(mattr xywh $wid) $wid"
}

main $ARGS
