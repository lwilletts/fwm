#!/bin/sh
#
# closer

usage() {
    base="$(basename "$0")"

    cat >&2 << EOF
Usage:
    $ $base -u | up    < -s | screen > : Focus next window up.
    $ $base -l | left  < -s | screen > : Focus next window left.
    $ $base -d | down  < -s | screen > : Focus next window down.
    $ $base -r | right < -s | screen > : Focus next window right.
    $ $base -h | help  < -s | screen > : Show this help.
EOF

    [ $# -eq 0 ] || exit "$1"
}

windowUp() {
    [ "$PFW" = "0x00000000" ] && {
        mouseY="$(wmp -r | cut -d\  -f 2)"
        printf '%s\n' "$root" | (xargs wattr yi; printf '%s\n' "$mouseY") | sort -nr | \
            sed -n "/$mouseY/{n;p}" | cut -d\  -f 2
    } || {
        printf '%s\n' "$root" | xargs wattr yi | sort -nr | sed -n "/$PFW/{n;p}" | cut -d\  -f 2
    }
}

windowDown() {
    [ "$PFW" = "0x00000000" ] && {
        mouseY="$(wmp -r | cut -d\  -f 2)"
        printf '%s\n' "$root" | (xargs wattr yi; printf '%s\n' "$mouseY") | sort -n | \
            sed -n "/$mouseY/{n;p}" | cut -d\  -f 2
    } || {
        printf '%s\n' "$root" | xargs wattr yi | sort -n | sed -n "/$PFW/{n;p}" | cut -d\  -f 2
    }
}

windowLeft() {
    [ "$PFW" = "0x00000000" ] && {
        mouseX="$(wmp -r | cut -d\  -f 1)"
        printf '%s\n' "$root" | (xargs wattr xi; printf '%s\n' "$mouseX") | sort -nr | \
            sed -n "/$mouseX/{n;p}" | cut -d\  -f 2
    } || {
        printf '%s\n' "$root" | xargs wattr xi | sort -nr | sed -n "/$PFW/{n;p}" | cut -d\  -f 2
    }
}

windowRight() {
    [  "$PFW" = "0x00000000" ] && {
        mouseX="$(wmp -r | cut -d\  -f 1)"
        printf '%s\n' "$root" | (xargs wattr xi; printf '%s\n' "$mouseX") | sort -n | \
            sed -n "/$mouseX/{n;p}" | cut -d\  -f 2
    } || {
        printf '%s\n' "$root" | xargs wattr xi | sort -n | sed -n "/$PFW/{n;p}" | cut -d\  -f 2
    }
}


main() {
    . fwmrc

    PFW="$(pfw 2> /dev/null || printf '%s\n' "0x00000000")"

    case "$2" in
        -s|--screen|screen) root="$(listwindows)" ;;
        *)                  root="$(lsw)"         ;;
    esac

    case "$1" in
        -u|--up|up)       focus --wid "$(windowUp)"    ;;
        -d|--down|down)   focus --wid "$(windowDown)"  ;;
        -l|--left|left)   focus --wid "$(windowLeft)"  ;;
        -r|--right|right) focus --wid "$(windowRight)" ;;
        -h|--help|help)   usage 0                      ;;
        *)                usage 1                      ;;
    esac
}

main "$@"
