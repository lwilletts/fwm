#!/bin/sh
#
# tile

usage() {
    base=$(basename $0)

    cat >&2 << EOF
Usage:
    $ $base split    : Horizontal split
    $ $base vertical : Vertical split
    $ $base focused  : Dwm-style
EOF

    test $# -eq 0 || exit $1
}

focused() {
    # tile smaller windows on the left
    Y=$SY
    W=$(echo "$SW / 100 * 35" | bc -l | cut -d. -f 1)
    H=$(((SH + IGAP) / (nWindows - 1) - IGAP))
    for wid in $(listcurrent); do
        wtp $SX $Y $W $H $wid
        Y=$((Y + H + IGAP))
    done

    X=$((SX + W + IGAP))
    W=$((SW - W - RGAP))

    wtp $X $SY $W $SH $wid
}

vertical() {
    Y=$SY
    H=$(((SH + IGAP) / nWindows - IGAP))
    for wid in $windows; do
        wtp $SX $Y $SW $H $wid
        Y=$((Y + H + IGAP))
    done
}

split() {
    X=$SX

    W=$(((SW + IGAP) / nWindows - IGAP))

    for wid in $windows; do
        wtp $X $SY $W $SH $wid
        X=$((X + W + IGAP))
    done
}

main() {
    . fwmrc
    wmenv
    wmgaps

    case $# in
        0)
            usage 1
            ;;
        1)
            SCR="$(pfm)"
            ;;
        2)
            mattr "$2" && SCR="$2" || {
                printf '%s\n' "$3 is not a connected screen."
                exit 1
            }
            ;;
    esac

    # clean fullscreen and tile it
    grep -qrw "$PFW" "$fsdir" 2> /dev/null && full --clean "$PFW"

    # grab screen variables
    windows="$(listcurrent)"
    nWindows="$(printf '%s\n' "$windows" | wc -l)"
    test "$nWindows" -eq 0 && exit 0

    SX=$(($(mattr x $SCR) + LGAP))
    SY=$(($(mattr y $SCR) + TGAP))
    SW=$(($(mattr w $SCR) - LGAP - RGAP))
    SH=$(($(mattr h $SCR) - TGAP - BGAP))

    case "$1" in
        -s|--split|split)       split    ;;
        -f|--focused|focused)   focused  ;;
        -v|--vertical|vertical) vertical ;;
        -h|--help|help)         usage 0  ;;
        *)                      usage 1  ;;
    esac

    # move mouse to middle of window
    wid="$PFW"
    wmp -a $(($(wattr x $wid) + $(wattr w $wid) / 2)) \
           $(($(wattr y $wid) + $(wattr h $wid) / 2))
}

main "$@"
