#!/bin/sh
#
# focus

usage() {
    base="$(basename "$0")"

    cat >&2 << EOF
Usage:
    $ $base -w | wid   : Focus given window id.
    $ $base -n | next  : Focus the next window in stack.
    $ $base -c | cycle : Focus the next window in stack on the same screen.
    $ $base -p | prev  : Focus the previous window in stack.
    $ $base -h | help  : Show this help.
EOF

    [ $# -eq 0 ] || exit "$1"
}

window() {
    wid="$1"
    if widCheck "$wid"; then
        [ "$wid" != "$PFW" ] && focus
    else
        exit 1
    fi
}

next() {
    wid="$(lsw | head -n 1)"
    focus
}

prev() {
    wid="$(lsw | tail -n 2 | head -n 1)"
    focus
}

cycle() {
    wid="$(lsw | grep "$(listwindows)" | head -n 1)"
    focus
}

focus() {
    # move mouse to center of new window
    # be as responsive as possible to user input
    wtf "$wid"
    chwso -r "$wid"

    if [ -z "$nojump" ]; then
        wmp -a $(($(wattr x "$wid") + $(wattr w "$wid") / 2 + BW)) \
               $(($(wattr y "$wid") + $(wattr h "$wid") / 2 + BW))
    fi

    # no border when wid is found to be fullscreen
    if [ "$(atomx MODE "$wid")" = "full" ]; then
        chwb -s "$BW" -c "$DIM" "$PFW"
        chwb -s 0 "$wid"
    else
        # set border when focusing from a fullscreen wid
        if [ "$(atomx MODE "$PFW")" = "full" ]; then
            chwb -s 0 "$PFW"
            chwb -s "$BW" -c "$ACTIVE" "$wid"
        else
            # normal focusing
            chwb -s "$BW" -c "$DIM" "$PFW"
            chwb -s "$BW" -c "$ACTIVE" "$wid"
        fi
    fi
}

unfocus() {
    wtf "$(lsw -r)"
    chwb -s "$BW" -c "$DIM" "$PFW"
}

main() {
    . fwmrc
    wmenv
    wmcolours

    case "$3" in
        nojump) nojump=1 ;;
    esac

    case "$1" in
        -w|--wid|wid)         window "$2" ;;
        -n|--next|next)       next        ;;
        -p|--prev|prev)       prev        ;;
        -c|--cycle|cycle)     cycle       ;;
        -u|--unfocus|unfocus) unfocus     ;;
        -h|--help|help)       usage 0     ;;
        *)                    usage 1     ;;
    esac
}

main "$@"
